#+title: Trying out keyboard webbrowsers
#+subtitle: how emacs can we go?
#+tags[]: browsers, emacs, nyxt, debian
#+date: 2020-06-30
#+draft: true

On [[https://sachachua.com/blog/2020/06/2020-06-29-emacs-news/][2020-06-29 emacs news]] I found a link to a [[https://www.reddit.com/r/emacs/comments/hgvkua/graphical_emacs_web_browsing_webkit_next_browser/][reddit discussion about
emacs web browsering]] and it got me inspired to try out a few different
things.  =Nyxt= is the most interested but is still very buggy and keeps
crashing, though it inspired me to pull out the [[https://willschenk.com/articles/2019/installing_guix_on_nuc/][Guix machine]] which I
haven't used since moving.  Let's go through.

* Nyxt/Next
Find the latest release from [[https://nyxt.atlas.engineer/download][the nyxt download page]] and then install
it. You'll need at least =buster=. The actual latest version isn't
available at the time of this writing it seems, but we'll go with 1.5.

** Option 1: Installing the =deb= package

#+begin_src bash
cd /tmp
wget https://nyxt.atlas.engineer/static/release/next_1.5_amd64.deb
sudo apt install ./next_1.5_amd64.deb
#+end_src

Then you can start it up using =next=.

** Fail: Upgrading =SBCL=

It's a little laggy, but maybe if we upgrade =sbcl= it will be faster?
I tried to do this with =asdf=, but it failed some tests and wouldn't
install.

#+begin_src bash
asdf plugin-add sbcl https://github.com/smashedtoatoms/asdf-sbcl.git
asdf install sbcl 2.0.6
#+end_src

** Option 2: Installing the =guix= package

The other option is to get the =guix= package and run everything self
contained.  This may be better since you'll have a more recent version
of =sbcl=.

Install =lzip= if you haven't already with =sudo apt install zlip=.  Then
download and try it out:



#+begin_src bash
cd /tmp
wget https://nyxt.atlas.engineer/static/release/next-linux-gtk-webkit.tar.lz
tar xf next-linux-gtk-webkit.tar.lz

#+end_src

And then start it up with /tmp/usr/local/bin/next

** Thoughts
Integration with emacs is sort of amazing.  The commonlisp running
Nyxt can talk to emacs and vicaversa, even passing around
sexpessions. It felt the most natural.

It was slow on this computer -- granted I'm running a Chromebook,
which is a) underpowered and b) optimized for running Chrome, so the
different was quite striking.

Youtube videos weren't playing, or at least the ones that I tried
didn't. =M-x download-video= was a great idea.

* Qutebrowser

I initially dismissed this because it was written in python and not
lisp.  Ha.

** From debian

I first tried following the installing on =buster= [[https://github.com/qutebrowser/qutebrowser/blob/master/doc/install.asciidoc][installation
instructions]] which were short and sweet but the browser was too old to
log in to github or google.  Not really sure what that means, but they
wouldn't let me do it.

#+begin_src bash
sudo apt install qutebrowser
#+end_src

This is a bit out of date, and when I tried to login to Google or github is said my browser was too old.

** From Source

We'll skip over to the [[https://qutebrowser.org/doc/install.html#tox][installing in an virtualenv]] section of the
page.  Make sure that you have an up-to-date version of have
=python3-venv= installed with a =apt install python3-venv= and lets go!

If you don't have =asciidocs= installed then add =--skip-docs= to the
mkvenv.py command.

#+begin_src bash
git clone https://github.com/qutebrowser/qutebrowser.git
cd qutebrowser
python3 scripts/mkvenv.py
#+end_src

One this is done we can create a simple script in
=/usr/local/bin/qutebrowser= to get it running:

#+begin_src bash
#!/bin/bash
~/qutebrowser/.venv/bin/python3 -m qutebrowser "$@"
#+end_src

** Sound
I also needed to install the =gstreamer= libraries to get sound working.
Not sure if we really need all of this but this is what we're going
with.

#+begin_src bash
  sudo apt install libgstreamer1.0-0 gstreamer1.0-plugins-base \
    gstreamer1.0-plugins-good gstreamer1.0-plugins-bad \
    gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc \
    gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl \
    gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio \
    gstreamer1.0-plugins-{bad,base,good,ugly}
#+end_src

Also I needed to tweak my sound to get it to play audio

#+begin_src bash
systemctl --user restart cros-pulse-config
#+end_src

** Desktop Files
TODO
** Emacs config

https://qutebrowser.org/doc/help/configuring.html#_emacs_like_config

** Overview

In crostini, youtube videos played but there was no sound.  Couldn't
log into google because it's an "unsecured browser".

Overall its much more stable and responsive than Nyxt.  Figuring out
the keybindings are weird though I think if you are coming from VIM it
might make more sense.

https://www.reddit.com/r/emacs/comments/9ze1ln/capture_orgmode_bookmarks_from_qutebrowser_with/

* References
1. https://www.reddit.com/r/emacs/comments/hgvkua/graphical_emacs_web_browsing_webkit_next_browser/
2. [[https://nyxt.atlas.engineer/download][the nyxt download page]] 
3. https://github.com/qutebrowser/qutebrowser/blob/master/doc/install.asciidoc
4. https://qutebrowser.org/doc/help/configuring.html#_emacs_like_config
