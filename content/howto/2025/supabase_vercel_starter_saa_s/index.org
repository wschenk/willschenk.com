#+title: Supabase Vercel Starter SaaS
#+subtitle: lets clone the world
#+tags[]: supabase vercel nextjs starter saas
#+date: 2025-01-31T14:51:30
#+draft: true

* Preqs

#+begin_src bash
  which pnpm
#+end_src

If not found,  [[https://pnpm.io/installation][install pnpm]].

#+begin_src bash
  which docker
#+end_src

If not found, =brew install --cask docker=


#+begin_src bash
  which supabase
#+end_src

If not found, =brew install supabase/tap/supabase=

#+begin_src bash
  which cursor
#+end_src

If not found, =brew install --cask cursor=

* Setup the environment

#+begin_src bash
  pnpm create next-app --example with-supabase appname
  cursor .
#+end_src

Once this is open, create a =.vscode/tasks.json= file:


#+begin_src javascript
 {
    "version": "2.0.0",
    "tasks": [
      {
        "label": "dev",
        "type": "shell",
        "command": "pnpm run dev", // or your specific dev command
        "isBackground": true,
        "problemMatcher": [],
        "presentation": {
          "reveal": "always",
          "panel": "new"
        },
        "runOptions": {
          "runOn": "folderOpen"
        }
      }
    ]
  }
#+end_src

The =CMD-SHIFT-P=, =Run Tasks=, and select =dev= which you just created.

=CTRL-SHIFT-`= to create a new terminal.  Type

#+begin_src bash
  supabase init
#+end_src

And then

#+begin_src bash
  supabase start
#+end_src

This will take a while.

* Setup local =.env.development=

#+begin_src bash
  supabase status | \
      awk -F ": " '/API URL/ {print "NEXT_PUBLIC_SUPABASE_URL=" $2}' \
          >> .env.development

  supabase status | \
      awk -F ": " '/anon key/ {print "NEXT_PUBLIC_SUPABASE_ANON_KEY=" $2}' \
          >> .env.development

#+end_src

* Accounts


Go to the [[http://localhost:3000/sign-up][signup page]].

Create an account.

You will see you login details on the account page.

Go to the [[http://127.0.0.1:54323/project/default/auth/users][user page on the studio]] to see the new user account.



* References
# Local Variables:
# eval: (add-hook 'after-save-hook (lambda ()(org-babel-tangle)) nil t)
# End:
