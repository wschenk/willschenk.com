#+title: Simple CORS workaround for local development
#+subtitle: Keep is Simple
#+date: 2020-06-15
#+tags[]: javascript cors static_sites
#+aliases[]: /articles/2020/simple_cors_workaround_for_local_development


I've been doing a lot of web development old school, just editing HTML
and JavaScript by hand without a build environment.  Running =npx
live-server= is an easy one liner to spin up a server, that opens a
browser for you and also updates changes on safe.

Sometimes that's not enough.  Often you want to pull in data from an
API, and that requires HTTPS, and also you need to work around CORS
limitations. Here's a simple way to do that.

1. First create a local certificate in =/tmp= if it's not there
2. Run =http-server=

#+ATTR_HTML: :class table table-striped
| Option           | Reason                                                 |
|------------------+--------------------------------------------------------|
| =--cors=           | Enable CORS via the Access-Control-Allow-Origin header |
| =-S=               | Enable https                                           |
| =-P=               | Proxy unhandled requests to =https://tezlabapp.com=      |
| =-c-1=             | Turn off caching                                       |
| =-C /tmp/cert.pem= | Certificate file                                       |
| =-K /tmp/key.pem=  | Key file                                               |

Here's something you can stick in your path to run it.

#+begin_src bash
#!/bin/bash
if [ ! -f /tmp/key.pem ]; then
  echo Creating key
  openssl req -newkey rsa:2048 -new -nodes -x509 -days 3650 -keyout /tmp/key.pem -out /tmp/cert.pem -batch
fi

npx http-server --cors -S -P https://tezlabapp.com -c-1 -C /tmp/cert.pem -K /tmp/key.pem
#+end_src  


 
