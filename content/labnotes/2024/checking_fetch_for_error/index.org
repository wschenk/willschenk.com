#+title: Checking fetch for error
#+subtitle: why is this so hard
#+tags[]: javascript
#+date: 2024-06-13T14:59:56

I can never remember how to actually to error checking with =fetch=.
Maybe I'm just slow.

#+begin_src html :tangle index.html :exports none
  <html>
    <head>
      <title>Test Page</title>
      <script src="network.js" type="module"></script>
    </head>
    <body><p>Open the console</p></body>
  </html>
#+end_src

#+begin_src javascript :tangle network.js
  async function serverDown() {
      try {
          return fetch( "http://localhost:1234" )
              .catch( (e) => {
                  console.log( "Promise error" );
                  console.log(e);
              })
      } catch( e ) {
          console.log( "Exception error" );
          console.log( e );
      }
  }

  console.log( "Starting" );
  await serverDown();
  console.log( "Done" )
#+end_src

To explore:

#+begin_src bash
  npx live-server
#+end_src

And if you open the console:

{{< img img="screenshot.png" fit="500x500 smart">}}

A more [[https://itnext.io/error-handling-with-async-await-in-js-26c3f20bc06a][detailed walk through]] can help you figure out what style works
better for you.

* References

1. https://web.dev/articles/fetch-api-error-handling
2. https://itnext.io/error-handling-with-async-await-in-js-26c3f20bc06a
   
# Local Variables:
# eval: (add-hook 'after-save-hook (lambda ()(org-babel-tangle)) nil t)
# End:
