#+title: have openai help you use the terminal
#+subtitle: slipping in some ai everywhere
#+tags[]: openai gem cli
#+date: 2025-01-10T05:36:13

I was reading through [[https://www.swyx.io/new-mac-setup][swyx's new mac setup]] and stumbled upon this
[[https://github.com/pmarreck/dotfiles/blob/master/bin/functions/please.bash][please function]] written in bash.  Lets give it a go.

#+begin_src bash :results output
  curl https://raw.githubusercontent.com/pmarreck/dotfiles/refs/heads/master/bin/functions/please.bash > please.bash
#+end_src

#+begin_src bash :results output
  source please.bash
  please Tell me why 2>&1

#+end_src

#+RESULTS:
: I require gum but it's not installed or in PATH; from https://github.com/charmbracelet/gum
: please.bash: line 38: s/'/'\\''/g: No such file or directory
: please.bash: line 63: gum: command not found
: please.bash: line 73: gum: command not found
: Aborted.

* gum

Lets install [[https://github.com/charmbracelet/gum][gum]]:

#+begin_src bash
  brew install gum
#+end_src

/which triggered me to run/

#+begin_src bash
  brew upgrade
  brew cleanup
#+end_src

How about a demo?

#+begin_src bash
  wget https://github.com/charmbracelet/gum/raw/refs/heads/main/examples/demo.sh
#+end_src

And then run it

* Back to =please.bash=

Inside of =_generate_curl_api_request_for_please= make sure you set =OPENAI_API_KEY=, like

#+begin_src bash
  OPENAI_API_KEY=$(op read 'op://Personal/OpenAI Key/notesPlain')
  SED=sed
#+end_src

Then you can =source please.bash=

and do

#+begin_src bash
 please search through all the subdirectories of ~/willschenk.com/content for files that contain the phrase asdf
#+end_src

Which looks like

{{< img img="demo.gif" >}}

That's a bit wordy but you get the idea.


* References

1. https://www.swyx.io/new-mac-setup
1. https://github.com/pmarreck/dotfiles/blob/master/bin/functions/please.bash
   
# Local Variables:
# eval: (add-hook 'after-save-hook (lambda ()(org-babel-tangle)) nil t)
# End:
